[{"categories":["abouts"],"contents":"Education Hong Kong University of Science and Technology | 2017-Present\nB.Eng | Aerospace Engineering\nResearch: Amphibian Aircrafts, CFD\nAdvisor: Rhea Liem\nGPA: 3.987 / 4.3\nSkills Computational Fluid Dynamics (CFD) Commercial Codes: OpenFOAM\n“In-house” Codes Development: MATLAB / Python\nCAD / CAM / CAE   CAD: SolidWorks / Fusion 360, etc..\n  CAM: CATIA / hyperMILL\n  CAE: CFD\n  Design Design of experiment\nConceptual design (coding)\nDetailed design with CAD modelling\nExperience Industry Work GE Aviation Edison Engineering Development Program | Co-op, Shanghai, (Incoming) 2021\nUniversity Work Undergraduate Research Opportunities Program | Researcher, HKUST, 2018 - Now\n  Research focus: Experimental and computational analyses (CFD / flight simulation) of amphibian aircrafts\n  2020 AIAA Aviation conference paper (Multi-Discipline Optimisation, accepted), presentation to be held on 15 and 18 Jun\n  Exchange Program, University of Michigan, 2019 Fall\n Fully school-sponsored with additional scholarship  Research Internship | Researcher, Shanghai Jiaotong University, 2019 July - August\n  Sponsored by SJTU and HKUST\n  Experimental analyses of take-off dynamics of amphibian aircrafts\n  F1 in School | Manager, 1st Runner-up, Best Racing Car, Beijing, China, 2017 July\n  Lead a team in an international engineering competition F1 in school\n  Using numerical and experimental methods to design a mini car under constraints\n  Marketing and fundraising for the operation of our team\n  Advanced design with optimised aerodynamics and structure\n  Awards and Honours Mr. Armin and Mrs. Lillian Kitchell Undergraduate Research Award, HKSUT, 2020\nHKIE Aviation Scholarship for Outstanding Engineering Students, Hong Kong Institution of Engineers, Aircraft Division Committee, 2019 (2 out of HK)\nUniversity Scholarship for Continuing UG Students, HKUST, 2018 - 2019 (2 years)\nDean\u0026rsquo;s List, School of Engineering, HKUST, 2017 - 2019 (5 semesters)\nUniversity Scholarship, HKUST, 2017\nPublications AIAA Aviation Forum Experimental and Computational Analyses of Take-off Hydrodynamics of an Amphibian Aircraft Hull\nMulti-disciplinary Optimisation (MDO) Section. Presentation to be held on 15 and 18 Jun.\n","permalink":"/jamesmshihua.github.io/cv/","tags":null,"title":"Curriculum Vitae"},{"categories":["Meta Data"],"contents":"Introduction Object We are going to numerically solve the one-dimensional inviscid Burgers equation using multiple methods here. The equation is written in a conservation form, which is $$ \\begin{equation} \\frac{\\partial u}{\\partial t}+\\frac{\\partial f}{\\partial x}=0 \\end{equation} $$ with a transport quantity $u$ and flux $f=\\frac{1}{2} u^{2}$. The initial condition is given with in the spatial domain $x\\in[0,1]$ and periodic, where $$ \\begin{equation} u^{0}(x)=0.1+\\sin (2 \\pi x). \\end{equation} $$\nTools In this project the majority part of programming and computational work is done in Matlab, while some minor equation manipulation is done manually or by Mathematica.\nNumerical Methods Initial Condition The initial condition was specified at nodes, which needs to be converted into cell averages. In this 1D advection problem, cell averages are calculated by $$ \\begin{equation} u_{j}^{0} \\equiv \\frac{1}{\\Delta x_{j}} \\int_{x_{j-1 / 2}}^{x_{j+1 / 2}} u^{0}(x) d x. \\end{equation} $$ With a prescribed number of cells $Nx$ and CFL number, it is possible to calculate $\\Delta x=\\frac{1}{\\text{Nx}}$, $\\Delta t=\\frac{\\text{CFL}\\Delta x}{u^0_{max}}$ and $\\text{Nt}=\\frac{1}{\\Delta t}$. Note that $\\text{Nt}$ may not be an integer, so the following procedures are necessary for the accuracy of our evaluation: $$\\begin{align} \\text{Nt} \u0026amp;=\\text{ceil}(\\text{Nt})\\\\\n\\Delta t \u0026amp;= \\frac{1}{\\text{Nt}}. \\end{align}$$ Also, in most cases of this project, cell centroid $$ \\begin{equation} \\bar{x_j}=(x_{j-1/2}+x_{j+1/2})/2 \\end{equation} $$.\nFirst-order Finite Volume (FV1) Forward-Euler time stepping $$ \\begin{equation} u_{j}^{n+1}=u_{j}^{n}-\\frac{\\Delta t}{\\Delta x}\\left(\\hat{F}_{j+1 / 2}-\\hat{F}_{j-1 / 2}\\right) \\label{forEuler} \\end{equation} $$ with the Godunov flux $$ \\begin{align} \\hat{F}_{j+1 / 2}=\u0026amp; \\begin{cases}{\\underset{u_{j} \\leq u \\leq u_{j+1}}{\\min} f(u)} \u0026amp; {\\text { when } u_{j} \\leq u_{j+1}} \\\\\n{\\underset{u_{j+1} \\leq u \\leq u_{j}}{\\max} f(u)} \u0026amp; {\\text { when } u_{j}\u0026gt;u_{j+1}}\\end{cases}. \\\\\n\\hat{F}_{j-1 / 2}=\u0026amp; \\begin{cases}{\\underset{u_{j-1} \\leq u \\leq u_{j}}{\\min} f(u)} \u0026amp; {\\text { when } u_{j} \\geq u_{j-1}} \\\\\n{\\underset{u_{j} \\leq u \\leq u_{j-1}}{\\max} f(u)} \u0026amp; {\\text { when } u_{j}\u0026lt; u_{j-1}}\\end{cases}. \\label{fv1_flux} \\end{align} $$\nLax-Wendroff (LW) The Lax-Wendroff flux is $$ \\begin{align} \\hat{F}_ {j+\\frac{1}{2}}^{LW}=\u0026amp;\\frac{1}{2}(f_{j}+f_{j+1})-\\frac{1}{2}\\hat{a}_{j+\\frac{1}{2}}^{2}\\frac{\\Delta t}{\\Delta x}(u_{j+1}-u_{j})\\\\\n\\hat{F}_ {j-\\frac{1}{2}}^{LW}=\u0026amp;\\frac{1}{2}(f_{j-1}+f_{j})-\\frac{1}{2}\\hat{a}_{j-\\frac{1}{2}}^{2}\\frac{\\Delta t}{\\Delta x}(u_{j}-u_{j-1}) \\label{lw_flux} \\end{align} $$ where $$ \\begin{aligned} \\hat{a}_{j+1 / 2}=\u0026amp;\\begin{cases}{\\frac{f_{j+1}-f_{j}}{u_{j+1}-u_{j}}} \u0026amp; {\\text { when } u_{j+1} \\neq u_{j}} \\ {f^{\\prime}\\left(u_{j}\\right)} \u0026amp; {\\text { when } u_{j+1}=u_{j}}\\end{cases} \\\\\n\\hat{a}_{j-1 / 2}=\u0026amp;\\begin{cases}{\\frac{f_{j}-f_{j-1}}{u_{j}-u_{j-1}}} \u0026amp; {\\text { when } u_{j-1} \\neq u_{j}} \\ {f^{\\prime}\\left(u_{j}\\right)} \u0026amp; {\\text { when } u_{j-1}=u_{j}}. \\end{cases} \\end{aligned} $$ In this particular case where $f=1/2u^2$, $f^\\prime=u$. Here, wave transport speed $\\hat{a}$ is introduced to properly determine the upwind direction. Time integration is still forward-Euler \\eqref{forEuler}. However, this method is not TVD which involves numerical dispersion.\nSuperbee Flux-Limited Lax-Wendroff (SB) The Superbee scheme constructs a mixture of Godunov flux \\eqref{fv1_flux} and Lax-Wendroff flux \\eqref{lw_flux}: $$ \\begin{aligned} \\hat{F}_ {j+\\frac{1}{2}}^{\\mathrm{FLLW}}\u0026amp;=\\hat{F}_{j+\\frac{1}{2}}^{\\mathrm{FV} 1}+\\phi_{j+\\frac{1}{2}}\\left(\\hat{F}_{j+\\frac{1}{2}}^{\\mathrm{LW}}-\\hat{F}_{j+\\frac{1}{2}}^{\\mathrm{FV} 1}\\right) \\\\\n\\hat{F}_ {j-\\frac{1}{2}}^{\\mathrm{FLLW}}\u0026amp;=\\hat{F}_{j-\\frac{1}{2}}^{\\mathrm{FV} 1}+\\phi_{j-\\frac{1}{2}}\\left(\\hat{F}_{j-\\frac{1}{2}}^{\\mathrm{LW}}-\\hat{F}_{j-\\frac{1}{2}}^{\\mathrm{FV} 1}\\right). \\end{aligned} $$ $\\phi$ is the superbee limiter defined by $$ \\begin{equation} \\phi(r)=\\max (0, \\min (2 r, 1), \\min (r, 2)) \\end{equation} $$ where $$ \\begin{equation} \\begin{aligned} \\hat{a}_{j+1 / 2}=\u0026amp;\\begin{cases}{\\frac{f_{j+1}-f_{j}}{u_{j+1}-u_{j}}} \u0026amp; {\\text { when } u_{j+1} \\neq u_{j}} \\\\ {f^{\\prime}\\left(u_{j}\\right)} \u0026amp; {\\text { when } u_{j+1}=u_{j}}\\end{cases}. \\\\\n\\hat{a}_{j-1 / 2}=\u0026amp;\\begin{cases}{\\frac{f_{j}-f_{j-1}}{u_{j}-u_{j-1}}} \u0026amp; {\\text { when } u_{j-1} \\neq u_{j}} \\\\dases {f^{\\prime}\\left(u_{j}\\right)} \u0026amp; {\\text { when } u_{j-1}=u_{j}}. \\end{cases}. \\end{aligned}\n\\end{equation} $$ Time integration is still forward-Euler \\eqref{forEuler}.\nSlope-Limited Second-Order Finite-Volume (FV2) In this method, the state in each cell is reconstructed to be a linear function, $$\\begin{equation} \\tilde{u}(x)=u_{j}+s_{j}\\left(x-x_{j}\\right) \\end{equation}$$ where $x_j$ is the centroid of cell $j$, calculated by \\cref{centroid}. The slope $s_j$ is computed from (limited by) the harmonic mean $$\\begin{equation} s_{j}=L\\left(s_{j-\\frac{1}{2}}, s_{j+\\frac{1}{2}}\\right)=\\begin{cases}{0} \u0026amp; {s_{j-\\frac{1}{2}} s_{j+\\frac{1}{2}}\u0026lt;0} \\\\\n{\\frac{2 s_{j-\\frac{1}{2}} s_{j+\\frac{1}{2}}}{s_{j-\\frac{1}{2}}+s_{j+\\frac{1}{2}}}} \u0026amp; {\\text { otherwise }}\\end{cases}. \\end{equation}$$ where $$\\begin{equation} s_{j-\\frac{1}{2}}=\\frac{u_{j}-u_{j-1}}{\\Delta x}, \\quad s_{j+\\frac{1}{2}}=\\frac{u_{j+1}-u_{j}}{\\Delta x}. \\end{equation}$$ The flux here is not calculated by two cell average but by the *interpolated state and unchanged neighbours*. In particular, the flux is still Godunov flux \\eqref{fv1_flux} but *only* $u_j$ will be interpolated. This time, time integration is modified Euler (EK2) $$\\begin{equation} \\begin{aligned} \\mathbf{f}_{0} \u0026amp;=\\mathbf{f}\\left(\\mathbf{u}^{n}, t^{n}\\right) \\\\ \\mathbf{f}_{1} \u0026amp;=\\mathbf{f}\\left(\\mathbf{u}^{n}+\\frac{1}{2} \\Delta t \\mathbf{f}_{0}, t^{n+\\frac{1}{2}}\\right) \\\\ \\mathbf{u}^{n+1} \u0026amp;=\\mathbf{u}^{n}+\\Delta t \\mathbf{f}_{1}. \\end{aligned} \\end{equation}$$\nQuadratic Upstream Interpolation for Convection Kinematics (QUICK) In this method, cell average becomes nodal-stored states (finite difference). Use a semi-discrete approach $$\\begin{equation} \\frac{d u_{j}}{d t}=-\\left.f_{x}\\right|_{j} = \\frac{F_{j+\\frac{1}{2}}-F_{j-\\frac{1}{2}}}{\\Delta x}. \\end{equation}$$ Flux approximation $F$ is in the form of $$\\begin{equation} F=\\frac12 q\\phi \\end{equation}$$ due to our flux is $f=1/2u^2$, where $q$ is the transported speed $$\\begin{equation} \\begin{aligned} q_{j+\\frac{1}{2}} =\u0026amp;\\frac{1}{2}(u_{j}+u_{j+1})\\\\\nq_{j-\\frac{1}{2}} =\u0026amp;\\frac{1}{2}(u_{j}+u_{j-1}) \\end{aligned} \\end{equation}$$ and $\\phi$ is the transported quantity ($u$ in our case) with a three-point interpolation $$\\begin{equation} \\begin{aligned} \\phi_{j+\\frac{1}{2}}\u0026amp;=\\begin{cases}{\\dfrac{3 u_{j+1}+6 u_{j}-u_{j-1}}{8}} \u0026amp; {\\text { if } q_{j+\\frac{1}{2}}\u0026gt;0} \\\\ {\\dfrac{3 u_{j}+6 u_{j+1}-u_{j+2}}{8}} \u0026amp; {\\text { if } q_{j+\\frac{1}{2}} \\leq 0}\\end{cases}.\\\\\n\\phi_{j-\\frac{1}{2}}\u0026amp;=\\begin{cases}{\\dfrac{3 u_{j-}+6 u_{j-1}-u_{j-2}}{8}} \u0026amp; {\\text { if } q_{j-\\frac{1}{2}}\u0026gt;0} \\\\ {\\dfrac{3 u_{j-1}+6 u_{j}-u_{j+1}}{8}} \u0026amp; {\\text { if } q_{j-\\frac{1}{2}} \\leq 0}\\end{cases}. \\end{aligned} \\label{intp} \\end{equation}$$\nQUICK with the SMART limiter (SMART) Different from the previous section where $\\phi$ is interpolated by \\eqref{intp}, a SMART limiter will be applied here. First introduce a smoothness monitor which admits the following general form $$\\begin{equation} \\phi_j=\\frac{\\text{UW1}-\\text{UW2}}{\\text{DW1}-\\text{UW2}} \\end{equation}$$ (UW for upwind and DW for downwind, determined by the wave propagation direction and the location that flux being calculated). The SMART limiter is defined as $$\\begin{equation} \\hat{\\phi}_ {j\\pm \\frac{1}{2}}=\\begin{cases}{\\hat{\\phi}_{j}} \u0026amp; {\\hat{\\phi}_{j}\u0026lt;0 \\quad \\text { or } \\quad \\hat{\\phi}_{j}\u0026gt;1} \\\\\n{3 \\hat{\\phi}_{j}} \u0026amp; {0\u0026lt;\\hat{\\phi}_{j}\u0026lt;\\frac{1}{6}} \\\\ {\\frac{3}{8}\\left(2 \\hat{\\phi}_{j}+1\\right)} \u0026amp; {\\frac{1}{6}\u0026lt;\\hat{\\phi}_{j}\u0026lt;\\frac{5}{6}} \\\\\n{1} \u0026amp; {\\frac{5}{6}\u0026lt;\\hat{\\phi}_{j}\u0026lt;1}\\end{cases}. \\end{equation}$$ Then we solve the actual $\\phi_{j\\pm1/2}$ by $$\\begin{equation} \\phi_{j\\pm \\frac{1}{2}} = \\hat\\phi_{j\\pm \\frac{1}{2}}(\\text{DW1}-\\text{UW2})+\\text{UW2}. \\end{equation}$$ **Note that SMART limiter does not turn QUICK into TVD**.\nResults All six methods discussed above are implemented to solve the Burgers equation with $T = 0.1$, $0.5$, $1$, and $Nx = 64$, $128$. Figures show the state $u$ on the $x$ stencil with different $T$ and $N_x$.\nIt is found that the left half travels towards right and the right half travels towards left, thus forming a shock in the middle range. The results agree with the fact that LW, QUICK and SMART are not TVD, which lead to dispersion near the shock. The shock position of FV2 is slightly different from others, mainly due to the slope is limited by the harmonic average, so does the wave speed.\nAs can be seen from convergence plot, when $T=0.1$, all methods exhibits a convergence rate near their order-of-accuracy. When $T\u0026gt;0.5$, the presence of shock makes non-TVD methods incapable to converge. Also, in face of a shock, flux limiters reduce the order-of-accuracy so second-order scheme has a convergence rate between 1 and 2.\nIn summary, both FV2 and Superbee exhibit higher order-of-accuracy ($1\u0026lt;p\u0026lt;2$), which are best candidate schemes for this problem. FV1 has $p\\approx1$, which matches its first-order accuracy. LW and QUICK are second-order accurate but not TVD, so they introduce spurious oscillations into the solution where shocks are present. SMART is not TVD the flux limiter is not strong enough to counter the non-linearity in this problem.\nCodes Go to Tools \u0026ndash; Codes\n","permalink":"/jamesmshihua.github.io/1d-fvm/","tags":null,"title":"1D Finite Volume Method"},{"categories":null,"contents":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n","permalink":"/jamesmshihua.github.io/abouts/john-doe/","tags":null,"title":"James Mingzhi Shihua"},{"categories":null,"contents":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n","permalink":"/jamesmshihua.github.io/author/john-doe/","tags":null,"title":"James Mingzhi Shihua"},{"categories":null,"contents":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n","permalink":"/jamesmshihua.github.io/author/mark-dinn/","tags":null,"title":"Mark Dinn"}]